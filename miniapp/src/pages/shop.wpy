/**
*  2017-10-12   Shi Ruitao
*/
<style lang="less">
.cart-box {
  padding-bottom: 100rpx;
}

.cart-list {
  position: relative;
  padding: 20rpx 20rpx 20rpx 285rpx;
  height: 185rpx;
  border-bottom: 1rpx solid #e9e9e9;
}

.cart-list .cart-pro-select {
  position: absolute;
  left: 20rpx;
  top: 90rpx;
  width: 45rpx;
  height: 45rpx;
}

.cart-list .cart-thumb {
  position: absolute;
  top: 20rpx;
  left: 85rpx;
  width: 185rpx;
  height: 185rpx;
}

.cart-list .cart-pro-name {
  display: inline-block;
  width: 65%;
  height: 110rpx;
  line-height: 50rpx;
  overflow: scroll;
}

.cart-list .cart-pro-price {
  // display: inline-block;
  float: right;
  height: 110rpx;
  line-height: 50rpx;
  color: red;
}

.cart-list .cart-count-box {
  position: absolute;
  left: 280rpx;
  bottom: 20rpx;
  width: 250rpx;
  height: 60rpx;
}

.cart-list .cart-count-box text {
  display: inline-block;
  line-height: 60rpx;
  text-align: center;
}

.cart-count-down {
  background-color: #AB956D;
  color: white;
  font-size: 44rpx;
  width: 70rpx;
  height: 100%;
}
.cart-count-add {
  background-color: #AB956D;
  color: white;
  font-size: 44rpx;
  width: 70rpx;
  height: 100%;
}

.cart-count-num {
  font-size: 40rpx;
  width: 80rpx;
  height: 93%;
}

.cart-del {
  position: absolute;
  right: 20rpx;
  bottom: 20rpx;
  width: 44rpx;
  height: 44rpx;
  line-height: 80rpx;
  text-align: center;
}

.cart-footer {
  position: fixed;
  display: flex;
  align-items: center;
  bottom: 0;
  width: 100%;
  height: 90rpx;
  background: #AB956D;
  color: #fff;
}

.total-select {
  padding-left: 20rpx;
}

.order-icon {
  display: flex;
  width: 40%;
  padding-bottom: 25rpx; 
}
.count {
  padding-right: 5rpx;
}

.cart-toatl-price {
  position: absolute;
  float: right;
  left: 350rpx;
}
.cart-toatl-count {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1px solid orangered;
  border-radius: 5px;
  background-color: orangered;
  width: 25%;
  height: 80rpx;
  left: 550rpx;
  margin-right: 10rpx;
}

.cart-no-data {
  padding: 40rpx 0;
  color: #999;
  text-align: center;
}
.selectAll {
  padding-left: 10rpx;
}
</style>
<template>
  <view class="main">
    <view wx:if="{{!carts.length}}">
      <view class="cart-no-data">购物车空~</view>
    </view>
    <view wx:else>
      <view class="cart-box">
        <view class="cart-list" wx:for="{{carts}}" wx:key="{{index}}">
          <icon wx:if="{{item.selected}}" type="success_circle" color="red" data-index="{{index}}" class="cart-pro-select" bindtap="selectList" />
          <icon wx:else type="circle" class="cart-pro-select" data-index="{{index}}" bindtap="selectList" />
          <image class="cart-thumb" src="{{item.image}}"></image>
          <text class="cart-pro-name">{{item.title}}</text>
          <text class="cart-pro-price">￥{{item.price}}</text>
          <view class="cart-count-box">
            <text class="cart-count-down" bindtap="minusCount" data-obj="{{obj}}" data-index="{{index}}">-</text>
            <text class="cart-count-num">{{item.num}}</text>
            <text class="cart-count-add" bindtap="addCount" data-index="{{index}}">+</text>
          </view>
          <image class="cart-del" bindtap="deleteList"  data-index="{{index}}" src="{{delete}}"/>
        </view>
      </view>
      <view class="cart-footer">
        <icon wx:if="{{selectAllStatus}}" type="success_circle" color="#fff" class="total-select" bindtap="selectAll" />
        <icon wx:else type="circle" color="#fff" class="total-select" bindtap="selectAll" />
        <text class="selectAll" bindtap="selectAll">全选</text>
        <text class="cart-toatl-price">￥ {{totalPrice}}</text>
        <view class="cart-toatl-count"  @tap="bill">
          <text style="font-size: 30rpx;">结算</text>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '购物车'
  }
  data = {
    carts: [],
    delete: '../my/delete.png',
    hasList: false,
    totalPrice: 0.0,
    num: 1,
    selectAllStatus: true,
    obj: {
      name: 'hello'
    }
  }
  methods = {
    selectList(e) {
      let self = this
      const index = e.currentTarget.dataset.index
      let carts = self.carts
      const selected = self.carts[index].selected
      self.carts[index].selected = !selected
      self.setData({
        carts: carts
      })
      self.methods.getTotalPrice(self)
    },

    getTotalPrice(self) {
      let total = 0
      for (let i = 0; i < self.carts.length; i++) {
        if (self.carts[i].selected) {
          total += self.carts[i].num * self.carts[i].price
        }
      }
      self.setData({
        totalPrice: total.toFixed(1)
      })
      self.totalPrice = total.toFixed(1)
    },

    async deleteList(e) {
      let self = this
      const index = e.currentTarget.dataset.index
      await wepy.request({
        url: 'http://127.0.0.1:7001/cartDelete',
        method: 'POST',
        data: {
          id: self.carts[index].id
        }
      })
      await wepy.request({
        url: 'http://127.0.0.1:7001/cartGet',
        success: function(res) {
          console.log(res.data, 'res.data')
          self.carts = res.data
          self.setData({
            carts: res.data
          })
          console.log(self.carts.length, '长度')
          self.methods.getTotalPrice(self)
        }
      })
    },

    selectAll() {
      let self = this
      let selectAllStatus = self.selectAllStatus
      selectAllStatus = !selectAllStatus
      let carts = self.carts
      for (let i = 0; i < carts.length; i++) {
        carts[i].selected = selectAllStatus
      }
      self.selectAllStatus = selectAllStatus
      self.methods.getTotalPrice(self)
    },

    addCount(e) {
      let self = this
      const index = e.currentTarget.dataset.index
      let carts = self.carts
      console.log(self.carts)
      let num = carts[index].num
      num = num + 1
      carts[index].num = num
      wepy.request({
        url: 'http://127.0.0.1:7001/cartUpdate',
        method: 'POST',
        data: {
          id: carts[index].id,
          num: carts[index].num
        }
      })
      self.setData({
        carts: carts
      })
      self.methods.getTotalPrice(self)
    },

    minusCount(e) {
      let self = this
      const index = e.currentTarget.dataset.index
      let carts = self.carts
      let num = carts[index].num
      if (num <= 1) {
        return false
      }
      num = num - 1
      carts[index].num = num
      wepy.request({
        url: 'http://127.0.0.1:7001/cartUpdate',
        method: 'POST',
        data: {
          id: self.carts[index].id,
          num: carts[index].num
        }
      })
      self.setData({
        carts: carts
      })
      self.methods.getTotalPrice(self)
    },

    bill() {
      let self = this
      wepy.showModal({
        title: '仅支持货到付款',
        content: `共计: ${self.totalPrice}元`
      })
    }
  }

  async onShow() {
    let self = this
    await wepy.request({
      url: 'http://127.0.0.1:7001/cartGet',
      success: function(res) {
        self.carts = res.data
        self.setData({
          carts: res.data
        })
        self.methods.getTotalPrice(self)
        console.log(self.carts, 'cart-onShow')
      }
    })
    this.$apply()
  }
  onLoad() {
    let self = this
    wepy.request({
      url: 'http://127.0.0.1:7001/cartGet',
      success: function(res) {
        self.carts = res.data
        self.setData({
          carts: res.data
        })
        self.methods.getTotalPrice(self)
      }
    })
  }
}
</script>
