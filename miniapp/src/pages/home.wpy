/**
*  2017-10-12   Shi Ruitao
*/
<style lang="less">
.overall {
  display: flex;
  flex-direction: column;
}

.viewsearch {
  display: flex;
  flex-direction: row;
  border-top: 1px solid gray;
  background-color: #A3D0C3;
  justify-content: center;
  align-items: center;
  height: 2.2rem;
}

.viewInput {
  display: flex;
  justify-content: center;
  height: 1.5rem;
  margin-left: 1.5rem;
}

.viewsearchIn {
  border: 2px solid #7BA7AB;
  border-radius: 5px;
  height: 90%;
  width: 14rem;
  background: #F9F0DA;
  color: #9E9C9C;
}

.searchButton {
  background: #7BA7AB;
  border-radius: 5px;
  height: 1.6rem;
  width: 13%;
  border-radius: 5px;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-right: 1.5rem;
}

.searchButtonPho {
  width: 1.3rem;
  height: 1.3rem;
}

.viewphoto {
  height: 8rem;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}


.class {
  display: flex;
  flex-direction: column;
  width: 100%;
  border-bottom: 0.3rem solid lightgrey;
}

.classline {
  display: flex;
  flex-direction: row;
  height: 3rem;
  width: 100%;
}

.classIn {
  display: flex;
  flex-direction: column;
  align-items: center;
  flex: 1;
  margin-top: 0.4rem;
}

.classStyle {
  width: 1.5rem;
  height: 1.5rem;
}

.classtext {
  font-size: 0.5rem;
  padding-top: 0.3rem;
}

.viewCom {
  display: flex;
  flex-direction: column;
  border-bottom: 3px solid lightgrey;
}

.title {
  font-size: 0.7rem;
  padding-top: 0.2rem;
  padding-bottom: 0.3rem;
  padding-left: 0.2rem;
}

.priceBtn {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.priceText {
  font-size: 0.9rem;
  color: red;
}

.buyButton {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  font-size: 0.5rem;
  color: white;
  background-color: red;
}

.viewprice {
  display: flex;
  align-items: center;
  width: 4rem;
  padding-left: 0.2rem;
  margin-bottom: 0.3rem;
}

.viewButton {
  display: flex;
  align-items: center;
  margin-left: 11rem;
  margin-bottom: 0.3rem;
  margin-right: 0.5rem;
}

.buttonOperation {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 1.2rem;
  width: 1.2rem;
}

.num {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 0.7rem;
}
</style>
<template>
  <view class="overall">
    <form bindsubmit="formSubmit">
      <view class="viewsearch">
        <view class="viewInput">
          <input class="viewsearchIn" style="font-size:0.8rem" name="input" placeholder="搜索您想要的商品..." />
        </view>
        <button class="searchButton" formType="submit">
          <image class="searchButtonPho" src="{{'../image/search.png'}}" />
        </button>
      </view>
    </form>

    <view>
      <swiper indicator-dots="{{indicatorDots}}" autoplay="{{autoplay}}" interval="{{interval}}" duration="{{duration}}" indicator-active-color="{{indicatorActiveColor}}">
        <block wx:for="{{imgUrls}}" wx:key="index">
          <swiper-item>
            <image src="{{item}}" class="viewphoto" />
          </swiper-item>
        </block>
      </swiper>
    </view>
    <view class="class">
      <view class="classline">
        <view class="classIn" @tap="page1">
          <image class="classStyle" src="{{icon.salt}}" />
          <text class="classtext">调味品</text>
        </view>
        <view class="classIn" @tap="page2">
          <image class="classStyle" src="{{icon.edibleOil}}" />
          <text class="classtext">食用油</text>
        </view>
        <view class="classIn" @tap="page3">
          <image class="classStyle" src="{{icon.rice}}" />
          <text class="classtext">米面</text>
        </view>
        <view class="classIn" @tap="page4">
          <image class="classStyle" src="{{icon.beans}}" />
          <text class="classtext">豆类</text>
        </view>
      </view>
      <view class="classline">
        <view class="classIn" @tap="page5">
          <image class="classStyle" src="{{icon.sauce}}" />
          <text class="classtext">酱乳类</text>
        </view>
        <view class="classIn" @tap="page6">
          <image class="classStyle" src="{{icon.hotPot}}" />
          <text class="classtext">火锅食材</text>
        </view>
        <view class="classIn" @tap="page7">
          <image class="classStyle" src="{{icon.snacks}}" />
          <text class="classtext">小零食</text>
        </view>
        <view class="classIn" @tap="page8">
          <image class="classStyle" src="{{icon.use}}" />
          <text class="classtext">餐具用品</text>
        </view>
      </view>
    </view>

    <view class="viewCom">
      <block wx:for="{{commodity}}" wx:key="index">
        <view class="viewCom">
          <image class="viewphoto" src="{{item.image}}" />
          <text class="title">{{item.title}}</text>
          <view class="priceBtn">
            <view class="viewprice">
              <text class="priceText">¥ {{item.price}}</text>
            </view>
            <view class="viewButton">
              <button class="buyButton" formType="submit" data-index="{{index}}" @tap="goods">加入购物车</button>
            </view>
          </view>
        </view>
      </block>
    </view>

  </view>
</template>

<script>
import wepy from 'wepy'
// import commodity from '../commodity/commodity.js'
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '超市'
  }
  data = {
    photoposter: '../images/poster.jpg',
    indicatorDots: true,
    autoplay: true,
    interval: 4000,
    duration: 500,
    indicatorActiveColor: '#e8884d',
    image: '',
    title: '',
    price: '',
    selected: '',
    num: 1,
    icon: {
      salt: '../image/salt.png',
      edibleOil: '../image/edibleOil.png',
      rice: '../image/rice.png',
      beans: '../image/beans.png',
      sauce: '../image/sauce.png',
      hotPot: '../image/hotPot.png',
      snacks: '../image/snacks.png',
      use: '../image/use.png'
    },
    imgUrls: [
      '../images/Yosemite.jpg',
      '../images/Yosemite 2.jpg'
    ],
    commodity: []
  }
  methods = {
    goods(e) {
      let self = this
      // let item = self.commodity[e.currentTarget.id]
      const index = e.currentTarget.dataset.index
      let commodity = self.data.commodity
      let image = commodity[index].image
      let title = commodity[index].title
      let price = commodity[index].price
      let selected = commodity[index].selected
      // self.image = image
      // self.title = title
      // self.price = price
      // self.selected = selected
      module.exports = { image, title, price, selected }
      console.log('加入购物车')
      // wepy.switchTab({
      //   url: `./shop?image=${self.image}&title=${self.title}&price=${self.price}&num=${self.num}&selected=${self.selected}`
      // })
    },
    changeIndicatorDots: function(e) {
      this.setData({
        indicatorDots: !this.data.indicatorDots
      })
    },
    changeAutoplay: function(e) {
      this.setData({
        autoplay: !this.data.autoplay
      })
    },
    intervalChange: function(e) {
      this.setData({
        interval: e.detail.value
      })
    },
    durationChange: function(e) {
      this.setData({
        duration: e.detail.value
      })
    },
    formSubmit: function(e) {
      console.log('form发生了submit事件，携带数据为：', e.detail.value)
    },
    page1() {
      wepy.navigateTo({
        url: './class/salt'
      })
    },
    page2() {
      wepy.navigateTo({
        url: './class/edibleOil'
      })
    },
    page3() {
      wepy.navigateTo({
        url: './class/rice'
      })
    },
    page4() {
      wepy.navigateTo({
        url: './class/beans'
      })
    },
    page5() {
      wepy.navigateTo({
        url: './class/sauce'
      })
    },
    page6() {
      wepy.navigateTo({
        url: './class/hotPot'
      })
    },
    page7() {
      wepy.navigateTo({
        url: './class/snacks'
      })
    },
    page8() {
      wepy.navigateTo({
        url: './class/use'
      })
    }
  }
  onLoad() {
    let self = this
    // self.commodity = commodity
    wepy.request({
      url: 'http://127.0.0.1/get',
      methods: 'POST',
      success: function(res) {
        console.log(res.data, 2)
        self.commodity = res.data
      }
    })
    console.log(self.commodity, 23)
  }
}
</script>
