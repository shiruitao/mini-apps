/**
*  2017-10-12   Shi Ruitao
*/
<style lang="less">
.overall {
  display: flex;
  flex-direction: column;
  padding-top: 1.5rem;
}

.view-top {
  position: fixed;
  top: 0;
  background-color: white;
  display: flex;
  flex-direction: row;
  align-items: center;
  height: 1.7rem;
  width: 100%;
  z-index: 100;
}

.view-class {
  display: flex;
  flex-direction: row;
  align-items: center;
  height: 100%;
  width: 100%;
}

.view-scroll {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
}

.text-class {
  width: 80px;
  height: 90%;
  font-size: 30rpx;
  display: flex;
  justify-content: center;
  align-items: center;
}
.view-search {
  height: 70%;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 15%;
  border-left: 1px solid lightgrey;
}

.searchButtonPho {
  width: 1rem;
  height: 1rem;
}

.view-swiper {
  height: 330rpx;
  width: 100%;
}

.photo-swiper {
  height: 100%;
  width: 100%;
}

.viewphoto {
  height: 80%;
  width: 100%;
}

.class {
  // display: flex;
  // flex-direction: column;
  height: 3rem;
  width: 100%;
  border-bottom: 0.5rem solid whitesmoke;
}

.classline {
  display: flex;
  flex-direction: row;
  height: 100%;
  width: 100%;
}

.classIn {
  display: flex;
  flex-direction: column;
  align-items: center;
  flex: 1;
  margin-top: 0.4rem;
  margin-bottom: 0.2rem;
}

.classStyle {
  width: 1.7rem;
  height: 1.7rem;
}

.classtext {
  font-size: 11px;
  padding-top: 0.3rem;
}

.view-list-commodity {
  display: flex;
  flex-wrap: wrap;
}

.view-commdity {
  width: 45%;
  height: 500rpx;
  display: flex;
  flex-direction: column;
  margin: 13rpx 0rpx 0 25rpx;
  position: static;
}

.text-title {
  display: -webkit-box;
  word-break: break-all;
  text-overflow: ellipsis;
  overflow: hidden;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  font-size: 25rpx;
}

.priceText {
  position: relative;
  bottom: 0;
  font-size: 30rpx;
  color: red;
  padding-left: 10rpx;
}

.view-title {
  display: flex;
  align-items: center;
  margin: 0 10rpx;
  width: 100%;
  height: 10%;
}

::-webkit-scrollbar {
  width: 0;
  height: 0;
  color: transparent;
}

.in1{
  height: 22px;
  width: 22px;
  border-radius: 50%;
  animation: move 3s infinite linear normal;
}
@keyframes move{
  0% { background:red;}
  40% {margin-top:0px; margin-left:94%; background:blue;}
  50% {margin-top:10%; margin-left:94%; background:yellow;}
  90% {margin-top:10%; margin-left:0px; background:green;}
  100% {margin-top:0px; margin-left:0px; background:red;}
}
.in1{
  background-color: tomato;
}

</style>
<template>
  <view class="overall" style="width: {{Width}}px">
    <view class="view-top">
      <scroll-view scroll-x="true" style="width: 85%; height: 100%">
        <view class="view-class">
          <view class="view-scroll" wx:for="{{tab}}" wx:key="index" id="{{index}}" @tap="tab">
            <text class="text-class" style="color: {{index == currentTargetId ? '#f56d11' : '#333333'}}; border-bottom: 3px solid {{index == currentTargetId ? '#f56d11' : 'white'}}">{{item}}</text>
          </view>
        </view>
      </scroll-view>
      <view class="view-search" @tap="search">
        <image class="searchButtonPho" src="{{'../image/search.png'}}" />
      </view>
    </view>
  
    <view class="view-swiper">
      <swiper class="photo-swiper" indicator-dots="{{indicatorDots}}" circular="true" autoplay="{{autoplay}}" interval="{{interval}}" duration="{{duration}}" indicator-active-color="{{indicatorActiveColor}}">
        <block wx:for="{{imgUrls}}" wx:key="index">
          <swiper-item>
            <image src="{{item}}" class="photo-swiper" />
          </swiper-item>
        </block>
      </swiper>
    </view>

    <view class="class">
      <view class="in1" />

    </view>

    <view class="view-list-commodity">
      <block wx:for="{{commodity}}" wx:key="index">
        <view wx:if="{{index !== 1}}" class="view-commdity" data-index="{{index}}" @tap="detail">
          <image class="viewphoto" src="{{item.image}}" />
          <view class="view-title">
            <text class="text-title">{{item.title}}</text>
          </view>
            <text class="priceText">¥ {{item.price}}</text>
        </view>
        <view wx:else class="view-commdity" style="heigh: 650rpx" data-index="{{index}}" @tap="detail">
          <image class="viewphoto" src="{{item.image}}" />
          <view class="view-title">
            <text class="text-title">{{item.title}}</text>
          </view>
            <text class="priceText">¥ {{item.price}}</text>
        </view>
      </block>
    </view>

  </view>
</template>

<script>
import wepy from 'wepy'
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '超市'
  }
  data = {
    tab: ['特价', '调味品', '米面', '豆类', '酱乳类', '火锅食材', '厨房餐具'],
    currentTargetId: 0,
    photoposter: '../images/poster.jpg',
    indicatorDots: true,
    autoplay: true,
    interval: 3000,
    duration: 500,
    indicatorActiveColor: '#e8884d',
    image: '',
    title: '',
    price: 0.0,
    selected: '',
    Width: 0,
    icon: {
      salt: '../image/salt.png',
      edibleOil: '../image/edibleOil.png',
      rice: '../image/rice.png',
      beans: '../image/beans.png',
      sauce: '../image/sauce.png',
      hotPot: '../image/hotPot.png',
      snacks: '../image/snacks.png',
      use: '../image/use.png'
    },
    imgUrls: [
      'https://img11.360buyimg.com/babel/jfs/t10276/362/1287822046/93410/f75a7664/59df518aN37f8489b.jpg',
      'https://img.alicdn.com/tfs/TB16j9ph2BNTKJjy0FdXXcPpVXa-520-280.jpg_q90',
      'https://img.alicdn.com/simba/img/TB1Sn01X7T85uJjSZFhSuwPEVXa.jpg'
    ],
    commodity: []
  }
  methods = {
    goods(e) {
      let self = this
      const index = e.currentTarget.dataset.index
      let commodity = self.commodity[index]
      wepy.request({
        url: 'http://127.0.0.1:7001/cartCreate',
        method: 'POST',
        data: {
          title: commodity.title,
          price: commodity.price,
          image: commodity.image
        },
        success: function(res) {
          console.log('success')
        }
      })
      wepy.showToast({
        title: '加入成功',
        icon: 'success',
        duration: 1000
      })
    },
    tab(e) {
      let self = this
      self.currentTargetId = e.currentTarget.id
      console.log(e.currentTarget.id, 'e中的东西')
    },
    search() {
      wepy.navigateTo({
        url: './class/search'
      })
    },
    changeIndicatorDots: function(e) {
      this.setData({
        indicatorDots: !this.data.indicatorDots
      })
    },
    changeAutoplay: function(e) {
      this.setData({
        autoplay: !this.data.autoplay
      })
    },
    intervalChange: function(e) {
      this.setData({
        interval: e.detail.value
      })
    },
    durationChange: function(e) {
      this.setData({
        duration: e.detail.value
      })
    },
    page1() {
      wepy.navigateTo({
        url: './class/salt'
      })
    },
    page2() {
      wepy.navigateTo({
        url: './class/edibleOil'
      })
    },
    page3() {
      wepy.navigateTo({
        url: './class/rice'
      })
    },
    page4() {
      wepy.navigateTo({
        url: './class/beans'
      })
    },
    page5() {
      wepy.navigateTo({
        url: './class/sauce'
      })
    },
    page6() {
      wepy.navigateTo({
        url: './class/hotPot'
      })
    },
    page7() {
      wepy.navigateTo({
        url: './class/snacks'
      })
    },
    page8() {
      wepy.navigateTo({
        url: './class/use'
      })
    },
    detail(e) {
      let self = this
      const index = e.currentTarget.dataset.index
      wepy.navigateTo({
        url: `./class/detail?id=${self.commodity[index].id}`
      })
      console.log(self.commodity[index].id, 'id')
    }
  }
  onShow() {
  }
  onLoad() {
    let self = this
    wepy.getSystemInfo({
      success(res) {
        self.Width = res.windowWidth
      }
    })
    wepy.request({
      url: 'http://127.0.0.1:7001/getSelect',
      method: 'GET',
      success: function(res) {
        self.commodity = res.data
        self.setData({
          commodity: res.data
        })
        console.log(res.data, 'res.data')
      }
    })
  }
}
</script>
